name: Deploy Application

on: 
  push:
    branches:
      - main

jobs:
  create-deployment-artifacts:
    name: Create Deployment Artifacts
    runs-on: ubuntu-latest
    outputs: 
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Compile CSS and Javascript
        run: |
          npm install
          npm run build
      
      - name: Configure PHP 8.3
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml  
      
      - name: Install Composer Dependencies
        run: composer install --no-dev --no-interaction --prefer-dist
      
      - name: Create Deployment Artifact
        env: 
          GITHUB_SHA: ${{ github.sha }}
        run: tar czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store Artifact For Distribution
        uses: actions/upload-artifact@v4
        with: 
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export Deployment Matrix
        id: export-deployment-matrix
        run: |
          ls -la
          JSON="$(cat .github/workflows/deployment-config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"
  prepare-release-on-servers:
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
      matrix: 
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.deployment-matrix) }}
    steps: 
      - uses: actions/download-artifact@v4
        with: 
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@98930d398ce425af0148ea8a0e3295cd04fe2b7a
        with:
          host: ${{ matrix.server.ip }}
          username: ${{ matrix.server.username }}
          password: ${{ matrix.server.password }}
          port: ${{ matrix.server.port }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ matrix.server.path }}/artifacts
      - name: Extract Archive and Create Directories
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ matrix.server.ip }}
          username: ${{ matrix.server.username }}
          password: ${{ matrix.server.password }}
          port: ${{ matrix.server.port }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ matrix.server.path }}/releases/${GITHUB_SHA}"
            tar xzf ${{ matrix.server.path }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ matrix.server.path }}/releases/${GITHUB_SHA}"


